#include "context.nvgt"

class state {
    game_context@ context; //make sure all state  classes has access to the context.
    state(game_context@ context) {
        @this.context=context;
    }
    void on_pop() {}
    void on_push() {}
    void on_update() {}
}


class state_manager {
    int current_state; // will be used to keep track of which state is active
    state@[] stack;    // where we store states on

    state_manager() {
        current_state = -1; // Start with no active state
    }

    // Push to the state_manager
    void push(state@ state) {
        if (current_state != -1) {
            stack[current_state].on_pop();
        }
        stack.insert_last(state);
        current_state = stack.length() - 1;
        stack[current_state].on_push();
    }

    // Pop from stack
    void pop() {
        if (current_state != -1) {
            stack[current_state].on_pop();
            stack.remove_at(stack.length() - 1);
            current_state = stack.length() - 1;
            if (current_state != -1) {
                stack[current_state].on_push();
            }
        }
    }

    // Update
    void update() {
        if (current_state != -1) {
            stack[current_state].on_update();
        }
    }
}

